{"ts":1380588968853,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var ogc         = window.ogc;\nvar app         = angular.module('OpenGroupChat', ['toggle-switch']).config(function($sceProvider) {\n    $sceProvider.enabled(false);\n});\nvar socket      = window.socket;\nvar sid         = socket.id;\n\nsocket.on('info', function (message) {\n    alert(message);\n});\n\napp.controller('SettingsController', function($scope) {\n    $scope.settings = {};\n\n    socket.on('myProfile', function (profile) {\n        $scope.settings = profile.settings;\n        $scope.$apply();\n    });\n\n    $scope.save = function () {\n        socket.emit('saveSettings', $scope.settings);\n    };\n    \n    $scope.$watch('settings.notifications', function() {\n        if ( $scope.settings.notifications === false && \"undefined\" !== typeof ogc && \"undefined\" !== typeof ogc.level && ogc.level === 1 ) ogc.notifications.requestPermission();\n    });\n    \n});\napp.controller('RoomController', function($scope) {\n    $scope.room = {};\n\n    $scope.save = function () {\n        socket.emit('createRoom', $scope.room);\n        $scope.room = {};\n        $('#newRoom').modal('hide');\n    };\n});\napp.controller('ChatController', function($scope) {\n    $scope.messages = [];\n    $scope.users    = [];\n    $scope.rooms    = [];\n    $scope.profile  = {};\n    $scope.editingRoom = {};\n    $scope.name     = '';\n    $scope.text     = '';\n    $scope.time     = '';\n    $scope.color    = '';\n\n    socket.on('connect', function () {\n        socket.emit('connect', sid);\n    });\n    \n    socket.on('users', function (users) {\n        $scope.users = users;\n        $scope.$apply();\n    });\n    /*\n     * Rooms\n     */\n    socket.on('rooms', function (rooms) {\n        $scope.rooms = rooms;\n        $scope.$apply();\n    });\n    $scope.joinRoom = function joinRoom(room) {\n        var roomName = room.toLowerCase();\n        if ($scope.rooms[roomName].private) {\n            jQuery('#joinRoom').modal();\n            $scope.roomName = roomName;\n        } else {\n            socket.emit('joinRoom', {\n                name: roomName\n            });\n            $scope.messages = [];\n        }\n    };\n    $scope.edit = function () {\n        var roomName = $scope.editingRoom.name.toLowerCase();\n        if ( $scope.rooms[roomName].id != sid ) {\n            jQuery('#editRoom').modal('hide');\n            alert('you are not the owner of this room')\n        } else {\n            socket.emit('editRoom', $scope.editingRoom );\n        }\n    };\n    $scope.editRoom = function editRoom(room) {\n        var roomName = room.toLowerCase();\n        $scope.editingRoom.name = room;\n        $scope.editingRoom.private = $scope.rooms[roomName].private;\n        $scope.editingRoom.password = $scope.rooms[roomName].password;\n    };\n    $scope.join = function () {\n        if ($scope.rooms[$scope.roomName].password === $scope.password) {\n            socket.emit('joinRoom', {\n                name: $scope.roomName,\n                password: $scope.password\n            });\n            $scope.messages = [];\n            $scope.roomName = \"\";\n            $scope.password = \"\";\n            $('#joinRoom').modal('hide');\n        } else {\n            alert('incorrect password');\n        }\n    };\n    socket.on('roomUserJoin', function (user) {\n        if ( ( \"lobby\" !== $scope.profile.room && ogc.notifications && $scope.profile.settings.notifications && $scope.profile.settings.join ) || ( \"lobby\" === $scope.profile.room && ogc.notifications && $scope.profile.settings.notifications && $scope.profile.settings.join && $scope.profile.settings.lobby  ) ) {\n            var notify,\n                    iconURL = user.image,\n                    title = user.name,\n                    desc = \"User Joined Room\";\n            if (navigator.mozNotification) {\n                notify = navigator.mozNotification.createNotification(title, desc, iconURL);\n            } else if (window.webkitNotifications) {\n                notify = window.webkitNotifications.createNotification(iconURL, title, desc);  \n            }\n            notify.show();\n        }\n    });\n    socket.on('roomUserLogin', function (user) {\n        if (ogc.notifications && $scope.profile.settings.notifications && $scope.profile.settings.login ) {\n            var notify,\n                    iconURL = user.image,\n                    title = user.name,\n                    desc = \"User Login\";\n            if (navigator.mozNotification) {\n                notify = navigator.mozNotification.createNotification(title, desc, iconURL);\n            } else if (window.webkitNotifications) {\n                notify = window.webkitNotifications.createNotification(iconURL, title, desc);  \n            }\n            notify.show();\n        }\n    });\n    socket.on('roomUserLeft', function (user) {\n        if (ogc.notifications && !ogc.level && $scope.profile.settings.notifications && $scope.profile.settings.leave ) {\n            var notify,\n                    iconURL = user.image,\n                    title = user.name,\n                    desc = \"User Left Room\";\n            if (navigator.mozNotification) {\n                notify = navigator.mozNotification.createNotification(title, desc, iconURL);\n            } else if (window.webkitNotifications) {\n                notify = window.webkitNotifications.createNotification(iconURL, title, desc);  \n            }\n            notify.show();\n        }\n    });\n    /*\n     * Profile Updates\n     */\n    socket.on('myProfile', function (profile) {\n        $scope.name         = profile.name;\n        $scope.color        = profile.color;\n        $scope.room         = profile.room;\n        $scope.profile      = profile;\n        $scope.$apply();\n        var authorizeButton = document.getElementById('authorize-button');\n        if (authorizeButton && profile.gid) {\n            var image = document.querySelector('#gapi-image');\n            image.src = profile.image;\n            authorizeButton.parentNode.removeChild(authorizeButton);\n        } else {\n            authorizeButton.style.visibility = '';\n        }\n        if (jQuery('body').hasClass('loading')) { jQuery('body').removeClass('loading'); jQuery('.container-fluid').removeClass('hide'); }\n    });\n    $scope.setName = function setName() {\n        window.clearTimeout(window.setNameInt);\n        window.setNameInt = window.setTimeout(function(){\n            socket.emit('updateName', $scope.name);\n        },1000);\n    };\n    $scope.setColor = function setColor() {\n        socket.emit('updateColor', $scope.color);\n    };\n     /*\n     * Send Message\n     */\n    $scope.send = function send() {\n      if ( $scope.text.length > 2 ) socket.emit('message', $scope.text);\n      $scope.text = '';\n    };\n    /*\n     * Recieving New Message\n     */\n    var DAYNAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    var MONTHNAMES = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    socket.on('message', function (data) {\n      var datetime = new Date();\n      data.time = ( datetime.getHours() === 0 ? 12 : ( datetime.getHours() > 12 ? datetime.getHours() - 12 : datetime.getHours() ) )\n                + \":\" + \n                (datetime.getMinutes() < 10 ? 0 : \"\") + datetime.getMinutes()\n                + \" \" + \n                (datetime.getHours() > 11 ? \"PM\" : \"am\") + \" \" +\n                DAYNAMES[datetime.getDay()] + \" \" + MONTHNAMES[datetime.getMonth()] + \" \" + datetime.getDate();\n      data.text = data.text.replace(/(\\b(https?|ftp|file):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|!:,.;]*[\\-A-Z0-9+&@#\\/%=~_|])/img, '<a target=\"_blank\" href=\"$1\">$1</a>');\n      $scope.messages.push(data);\n        if ( $scope.messages.length > $scope.profile.settings.messages ) {\n            $scope.messages = $scope.messages.slice(1,parseInt($scope.profile.settings.messages)+1);\n        }\n      $scope.$apply();\n      $('#messages').scrollTop($('#messages').prop(\"scrollHeight\"));\n    });\n    socket.on('newMessage', function (data) {\n      var datetime = new Date();\n      data.time = ( datetime.getHours() === 0 ? 12 : ( datetime.getHours() > 12 ? datetime.getHours() - 12 : datetime.getHours() ) )\n                + \":\" + \n                (datetime.getMinutes() < 10 ? 0 : \"\") + datetime.getMinutes()\n                + \" \" + \n                (datetime.getHours() > 11 ? \"PM\" : \"am\") + \" \" +\n                DAYNAMES[datetime.getDay()] + \" \" + MONTHNAMES[datetime.getMonth()] + \" \" + datetime.getDate();\n      data.text = data.text.replace(/(\\b(https?|ftp|file):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|!:,.;]*[\\-A-Z0-9+&@#\\/%=~_|])/img, '<a target=\"_blank\" href=\"$1\">$1</a>');\n      $scope.messages.push(data);\n        if ( $scope.messages.length > $scope.profile.settings.messages ) {\n            $scope.messages = $scope.messages.slice(1,parseInt($scope.profile.settings.messages)+1);\n        }\n      if ( ogc.notifications && $scope.profile.settings.notifications ) {\n        var notify,\n                iconURL = data.image,\n                title = data.name + \" said:\",\n                desc = data.text;\n        if (navigator.mozNotification) {\n            notify = navigator.mozNotification.createNotification(title, desc, iconURL);\n        } else if (window.webkitNotifications) {\n            notify = window.webkitNotifications.createNotification(iconURL, title, desc);  \n        }\n        notify.show();\n      }\n      $scope.$apply();\n      $('#messages').scrollTop($('#messages').prop(\"scrollHeight\"));\n    });\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":9428}]],"length":9428}
